logging:
  pattern.console: "%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr(${PID}){faint} %clr(---){faint}%clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n"
  level:
    root: info

info:
  build:
    version: ^project.version^
    timestamp: ^maven.build.timestamp^

server.port: 8080

spring:
  application:
    name: ^project.artifactId^
  main:
    banner-mode: off
  output:
    ansi:
      enabled: always
  cloud:
    stream:
      default-binder: kafka
      schema:
        avro:
          dynamicSchemaGenerationEnabled: true
      default:
        content-type: application/*+avro
        producer:
          use-native-encoding: true
      bindings:
        availabilitySearchProducer-out-0:
          destination: hotel_availability_searches
      kafka:
        bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
        default:
          requiredAcks: all
          producer:
            configuration:
              schema.registry.url: ${SCHEMA_REGISTRY_URL:http://localhost:8081}
              retry.backoff.ms: 100
              max.in.flight.requests.per.connection: 1
              key.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
              value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
        binder:
          requiredAcks: all
          brokers: ${KAFKA_BROKERS:localhost}
          defaultBrokerPort: 9092
          autoCreateTopics: false
